Burp suite stores the proxy credentials in plain text under UserConfigPro.json file.


$jsonPath = "C:\Users\$($env:USERNAME)\AppData\Roaming\BurpSuite\UserConfigPro.json"

if (Test-Path $jsonPath) {
    try {
        $fileContent = Get-Content $jsonPath -Raw | ConvertFrom-Json

        # Platform Authentication
        $platformAuth = $fileContent.user_options.connections.platform_authentication

        Write-Host "--- Platform Authentication Configuration ---"
        Write-Host "Do Platform Authentication: $($platformAuth.do_platform_authentication)"
        Write-Host "Prompt on Authentication Failure: $($platformAuth.prompt_on_authentication_failure)"
        Write-Host "Credentials: $($platformAuth.credentials)"

        Write-Host ""

        # Socks Proxy
        $socksProxy = $fileContent.user_options.connections.socks_proxy

        Write-Host "--- Socks Proxy Configuration ---"
        Write-Host "DNS over Socks: $($socksProxy.dns_over_socks)"
        Write-Host "Host: $($socksProxy.host)"
        Write-Host "Password: $($socksProxy.password)"
        Write-Host "Port: $($socksProxy.port)"
        Write-Host "Use Proxy: $($socksProxy.use_proxy)"
        Write-Host "Username: $($socksProxy.username)"

        Write-Host ""

        # Upstream Proxy
        $upstreamProxyServers = $fileContent.user_options.connections.upstream_proxy.servers

        if ($upstreamProxyServers.Count -gt 0) {
            $upstreamProxy = $upstreamProxyServers[0]

            Write-Host "--- Upstream Proxy Configuration ---"
            Write-Host "Auth Type: $($upstreamProxy.auth_type)"
            Write-Host "Destination Host: $($upstreamProxy.destination_host)"
            Write-Host "Enabled: $($upstreamProxy.enabled)"
            Write-Host "Password: $($upstreamProxy.password)"
            Write-Host "Proxy Host: $($upstreamProxy.proxy_host)"
            Write-Host "Proxy Port: $($upstreamProxy.proxy_port)"
            Write-Host "Username: $($upstreamProxy.username)"
        } else {
            Write-Host "No upstream proxy server configuration found."
        }

    } catch {
        Write-Host "Error reading or parsing JSON file: $_"
    }
} else {
    Write-Host "File not found at specified path."
}
